[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "molecule-flow-backend"
version = "0.1.0"
description = "Backend services for the Molecular Data Management and CRO Integration Platform"
authors = ["MoleculeFlow Team <dev@moleculeflow.com>"]
readme = "README.md"
packages = [{include = "app"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.95.0"
uvicorn = "^0.22.0"
pydantic = "^2.0.0"
sqlalchemy = "^2.0.0"
alembic = "^1.11.0"
psycopg2-binary = "^2.9.6"
pandas = "^2.0.0"
numpy = "^1.24.0"
celery = "^5.2.7"
redis = "^4.5.4"
boto3 = "^1.26.0"
scikit-learn = "^1.2.0"
python-jose = "^3.3.0"
passlib = "^1.7.4"
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
requests = "^2.28.0"
httpx = "^0.24.0"
tenacity = "^8.2.0"
circuitbreaker = "^1.4.0"
docusign-esign = "^3.20.0"
email-validator = "^2.0.0"
structlog = "^23.1.0"
gunicorn = "^20.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.10.0"
black = "^23.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.3.0"
bandit = "^1.7.5"
pre-commit = "^3.3.2"
factory-boy = "^3.2.1"
faker = "^18.9.0"
tox = "^4.6.0"

[tool.black]
line-length = 100
target-version = ["py310", "py311"]
include = "\.pyi?$"
exclude = "/(\.\.+|venv|build|dist)/"

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=app --cov-report=term-missing --cov-report=xml"

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/migrations/*", "*/alembic/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]
fail_under = 85