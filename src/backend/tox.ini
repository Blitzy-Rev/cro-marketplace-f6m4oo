[tox]
minversion = 4.6.0
envlist = py310, py311, lint, type, security
isolated_build = True

[testenv]
deps =
    pytest>=7.3.1
    pytest-cov>=4.1.0
    pytest-asyncio>=0.21.0
    httpx>=0.24.0
    fastapi>=0.95.0
    pydantic>=2.0.0
    sqlalchemy>=2.0.0
commands =
    pytest {posargs:tests} --cov=. --cov-report=term-missing
setenv =
    PYTHONPATH = {toxinidir}
    TESTING = 1

[testenv:py310]
basepython = python3.10
description = Run tests with Python 3.10

[testenv:py311]
basepython = python3.11
description = Run tests with Python 3.11

[testenv:lint]
description = Run code linting checks
deps =
    flake8>=6.0.0
    black>=23.3.0
    isort>=5.12.0
commands =
    flake8 . tests
    black --check . tests
    isort --check-only --profile black . tests
skip_install = True

[testenv:type]
description = Run type checking
deps =
    mypy>=1.3.0
    types-requests
    types-PyYAML
    pydantic>=2.0.0
commands =
    mypy .
skip_install = True

[testenv:security]
description = Run security checks
deps =
    bandit>=1.7.5
commands =
    bandit -r . -c pyproject.toml
skip_install = True

[testenv:format]
description = Format code
deps =
    black>=23.3.0
    isort>=5.12.0
commands =
    black . tests
    isort --profile black . tests
skip_install = True

[testenv:coverage]
description = Generate coverage report
deps =
    pytest>=7.3.1
    pytest-cov>=4.1.0
    pytest-asyncio>=0.21.0
    httpx>=0.24.0
commands =
    pytest {posargs:tests} --cov=. --cov-report=xml:coverage.xml --cov-report=html:htmlcov --cov-fail-under=85
setenv =
    PYTHONPATH = {toxinidir}
    TESTING = 1

[flake8]
max-line-length = 100
exclude = .tox,*.egg,build,data,.git,__pycache__,venv
select = E,W,F
ignore = E203, W503
# E203: whitespace before ':', conflicts with black
# W503: line break before binary operator, conflicts with black