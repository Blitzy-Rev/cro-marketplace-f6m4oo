name: Frontend CI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - src/web/**
      - .github/workflows/frontend_ci.yml
  pull_request:
    branches:
      - main
      - develop
    paths:
      - src/web/**

env:
  WORKING_DIRECTORY: src/web
  NODE_VERSION: '18'

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
      
      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci
      
      - name: Run linting
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run lint
      
      - name: Run type checking
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run typecheck
      
      - name: Run tests with coverage
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run test:coverage
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ${{ env.WORKING_DIRECTORY }}/coverage

  security_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install security tools
        run: npm install -g npm-audit-reporter git-secrets
      
      - name: Run npm audit
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm audit --json | npm-audit-reporter -o sarif > npm-audit-results.sarif || true
      
      - name: Run git-secrets
        run: git-secrets --register-aws && git-secrets --scan
      
      - name: Upload npm audit SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ env.WORKING_DIRECTORY }}/npm-audit-results.sarif
          category: npm-audit

  build_docker:
    needs: [lint_and_test, security_scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_REGISTRY }}/molecule-flow/frontend
          tags: |
            type=ref,event=branch
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.WORKING_DIRECTORY }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/molecule-flow/frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/molecule-flow/frontend:buildcache,mode=max
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_REGISTRY }}/molecule-flow/frontend:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif
          category: trivy