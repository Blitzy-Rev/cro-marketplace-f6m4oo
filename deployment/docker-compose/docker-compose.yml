version: '3.8'

services:
  frontend:
    build:
      context: ../../src/web
    container_name: molecule-platform-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://backend:8000/api/v1
      - VITE_APP_TITLE=MoleculeFlow
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - frontend-network
    depends_on:
      - backend

  backend:
    build:
      context: ../../src/backend
    container_name: molecule-platform-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/molecule_platform
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-default_development_key}
      - API_V1_STR=/api/v1
      - PROJECT_NAME=Molecular Data Management Platform
      - BACKEND_CORS_ORIGINS=http://localhost:3000,http://frontend:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - frontend-network
      - backend-network
    depends_on:
      - database
      - redis

  molecule_service:
    build:
      context: ../../src/backend
    container_name: molecule-platform-molecule-service
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/molecule_platform
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-default_development_key}
      - SERVICE_TYPE=molecule_processor
      - AI_ENGINE_API_URL=${AI_ENGINE_API_URL:-http://ai-engine:5000/api}
    command: ["python", "-m", "app.services.molecule_service"]
    restart: unless-stopped
    networks:
      - backend-network
    depends_on:
      - database
      - redis
    volumes:
      - molecule-data:/app/data/molecules

  worker:
    build:
      context: ../../src/backend
    container_name: molecule-platform-worker
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/molecule_platform
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-default_development_key}
      - SERVICE_TYPE=worker
    command: ["celery", "-A", "app.tasks.celery_app", "worker", "--loglevel=info"]
    restart: unless-stopped
    networks:
      - backend-network
    depends_on:
      - database
      - redis

  database:
    image: postgres:15.0
    container_name: molecule-platform-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=molecule_platform
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - backend-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7.0
    container_name: molecule-platform-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - backend-network
    volumes:
      - redis-data:/data

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  molecule-data:
    driver: local
  document-storage:
    driver: local